/**
 * Resolve a color from a string, number, RGB array or color preset.
 * Inspired by Guilded.JS' {@link https://github.com/guildedjs/guilded.js/blob/main/packages/webhook-client/lib/util.ts#L8 color resolver}.
 * @param color The color to resolve.
 * @returns The resolved color.
 * @example
 * // Resolve the color with a hex color.
 * resolveColor(0xFFFFFF);
 * resolveColor('#FFFFFF');
 * // Resolve the color with a preset color.
 * resolveColor('WHITE');
 * // Resolve the color with RGB values.
 * resolveColor([255, 255, 255]);
 */
export declare function resolveColor(color: ColorResolvable): number;
/** The color resolvable type. */
export declare type ColorResolvable = `#${string}` | keyof typeof Colors | 'RANDOM' | number | [r: number, g: number, b: number];
/** A set of color presets. */
export declare enum Colors {
    DEFAULT = 0,
    WHITE = 16777215,
    BLACK = 0,
    GILDED = 16106496,
    GREY = 3552829,
    RED = 14692657,
    PINK = 12723548,
    GRAPE = 10237621,
    VIOLET = 6767065,
    INDIGO = 3890139,
    BLUE = 1667522,
    CYAN = 820633,
    TEAL = 627304,
    GREEN = 3120708,
    LIME = 6727695,
    YELLOW = 16565273,
    ORANGE = 15227148
}
//# sourceMappingURL=util.d.ts.map