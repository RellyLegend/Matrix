import { WSEvents } from 'guilded-api-typings';
import { Client } from '../../structures/Client';
/**
 * Handle the TeamMemberJoined event.
 * @param client The client the Websocket belongs to.
 * @param data The data of the event.
 */
export declare function joined(client: Client, data: WSEvents['TeamMemberJoined']): Promise<void>;
/**
 * Handle the TeamMemberRemoved event.
 * @param client The client the Websocket belongs to.
 * @param data The data of the event.
 */
export declare function removed(client: Client, data: WSEvents['TeamMemberRemoved']): Promise<void>;
/**
 * Handle the TeamMemberBanned event.
 * @param client The client the Websocket belongs to.
 * @param data The data of the event.
 */
export declare function banned(client: Client, data: WSEvents['TeamMemberBanned']): Promise<void>;
/**
 * Handle the TeamMemberUnbanned event.
 * @param client The client the Websocket belongs to.
 * @param data The data of the event.
 */
export declare function unbanned(client: Client, data: WSEvents['TeamMemberUnbanned']): Promise<void>;
/**
 * Handle the TeamMemberUpdated event.
 * @param client The client the Websocket belongs to.
 * @param data The data of the event.
 */
export declare function updated(client: Client, data: WSEvents['TeamMemberUpdated']): Promise<void>;
//# sourceMappingURL=member.d.ts.map